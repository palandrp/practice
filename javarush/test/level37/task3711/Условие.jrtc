<div class="wdghtml" taskKey="com.javarush.task.task37.task3711">
<h3>Фасад</h3>
<p><strong>Паттерн Фасад</strong> позволяет скрыть сложность системы путём сведения всех возможных внешних вызовов к одному объекту, делегирующему их соответствующим объектам системы.</p>
<p>В данном случае, в классе Solution по отдельности создаются объекты типов <span class="text-corporate"><strong>CPU</strong></span>, <span class="text-corporate"><strong>Memory</strong></span> и <span class="text-corporate"><strong>HardDrive</strong></span> и, в дальнейшем, на этих объектах вызываются некоторые методы.<br />
Клиенту (<em>в данном случае классу</em> <strong><span class="text-corporate">Solution</span></strong>), было бы намного удобнее, если бы существовал класс<br />
Computer, инкапсулирующий создание объектов и предоставляющий единую точку взаимодействия с ними.</p>
<p><strong>Проведем рефакторинг:</strong><br />
1) Создай класс <strong><span class="text-corporate">Computer</span></strong> в котором создай и инициализируй поля типов <span class="text-corporate"><strong>CPU</strong></span>, <span class="text-corporate"><strong>Memory</strong></span> и <span class="text-corporate"><strong>HardDrive</strong></span>.<br />
2) В классе <span class="text-corporate"><strong>Computer</strong></span> реализуй метод <mark>void run()</mark>, в котором вызови необходимые методы у объектов <span class="text-corporate"><strong>CPU</strong></span>, <span class="text-corporate"><strong>Memory</strong></span> и <span class="text-corporate"><strong>HardDrive</strong></span>.<br />
3) Удали содержимое метода <mark>main</mark> класса <span class="text-corporate"><strong>Solution</strong></span>, после чего добавь туда создание нового компьютера и его запуск.</p>

</div>
